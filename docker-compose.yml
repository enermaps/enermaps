version: "3.8"
services:

  frontend:
    build:
      context: ./frontend
    ports:
      - "127.0.0.1:7000:80"
    restart: always
    depends_on:
      - "api"
    volumes:
      - caddy-data:/data
      - caddy-config:/config
      - ./stats/caddy-logs:/var/log
    env_file:
      .env

  api:
    build:
      context: ./api
    ports:
      - "127.0.0.1:9000:80"
    restart: always
    environment:
      WMS_CACHE_DIR: /wms_cache
      CM_OUTPUTS_DIR: /cm_outputs
      FILTER_DATASETS: 1
    depends_on:
      - redis
    volumes:
      - wms_cache:/wms_cache
      - cm_outputs:/cm_outputs
    env_file:
      - .env
      - .env-db-server

  redis:
    image: redis:6-alpine
    ports:
      - "127.0.0.1:6379:6379"
    restart: always
    volumes:
      - redis-data:/data

  flower:
    image: mher/flower:0.9.4
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      - redis
    restart: always
    volumes:
      - flower-data:/data
    env_file:
      .env

#  cm-heat-demand:
#    build:
#      context: ./cm
#      dockerfile: cm_heat_demand/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#    env_file:
#      .env
#
#  cm-hdd_cdd:
#    build:
#      context: ./cm
#      dockerfile: hdd_cdd/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#      INPUT_DATA_DIR: /cm_inputs
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#      - cm_inputs:/cm_inputs:rw
#    env_file:
#      .env
#
#  cm-refurbish:
#    build:
#      context: ./cm
#      dockerfile: refurbish/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#      INPUT_DATA_DIR: /cm_inputs
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#      - cm_inputs:/cm_inputs:rw
#    env_file:
#      .env
#
#  cm-multiply:
#    build:
#      context: ./cm
#      dockerfile: example_multiply/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#    env_file:
#      .env
#
#  cm-empty:
#    build:
#      context: ./cm
#      dockerfile: example_empty/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#    env_file:
#      .env
#
#  cm-heatlearn:
#    build:
#      context: ./
#      dockerfile: ./cm/heatlearn/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#    env_file:
#      - .env
#      - .env-db-server
#
#  cm-dhexppot:
#    build:
#      context: ./cm
#      dockerfile: ./cm_dhexppot/Dockerfile
#    environment:
#      WMS_CACHE_DIR: /wms_cache
#    depends_on:
#      - redis
#    restart: always
#    volumes:
#      - wms_cache:/wms_cache:ro
#    env_file:
#      - .env
#      - .env-db-server

  cm-historeno:
    build:
      context: ./cm
      dockerfile: ./cm_historeno/Dockerfile
    environment:
      WMS_CACHE_DIR: /wms_cache
    depends_on:
      - redis
    restart: always
    volumes:
      - wms_cache:/wms_cache:ro
    env_file:
      - .env
      - .env-db-server
volumes:
  wms_cache:
  cm_outputs:
  cm_inputs:
  caddy-data:
  caddy-config:
  caddy-logs:
  redis-data:
  flower-data:
