version: "3.8"
services:
  cm-heat-demand:
    build:
      context: ./cm
      dockerfile: cm_heat_demand/Dockerfile
    environment:
      GEODB_DIR: /geodb
      CM_OUTPUTS_DIR: /cm_outputs
    volumes:
      - geodb:/geodb:ro
      - cm_outputs:/cm_outputs
    env_file:
      .env

  cm-multiply:
    build:
      context: ./cm
      dockerfile: example_multiply/Dockerfile
    environment:
      GEODB_DIR: /geodb
      CM_OUTPUTS_DIR: /cm_outputs
    volumes:
      - geodb:/geodb:ro
      - cm_outputs:/cm_outputs
    env_file:
      .env

  cm-empty:
    build:
      context: ./cm
      dockerfile: example_empty/Dockerfile
    environment:
      GEODB_DIR: /geodb
      CM_OUTPUTS_DIR: /cm_outputs
    volumes:
      - geodb:/geodb:ro
      - cm_outputs:/cm_outputs
    env_file:
      .env

  cm-hdd_cdd:
    build:
      context: ./cm
      dockerfile: cm_hdd_cdd/Dockerfile
    environment:
      GEODB_DIR: /geodb
      CM_OUTPUTS_DIR: /cm_outputs
    volumes:
      - geodb:/geodb:ro
      - cm_outputs:/cm_outputs
    env_file:
      .env

  frontend:
    build:
      context: ./frontend
    ports:
      - "127.0.0.1:7000:80"
    restart: always
    # depends_on:
    #   - "api"
    volumes:
      - caddy-data:/data
      - caddy-config:/config
    env_file:
      .env

  api:
    build:
      context: ./api
    ports:
      - "127.0.0.1:9000:80"
    restart: always
    environment:
      GEODB_DIR: /geodb
      CM_OUTPUTS_DIR: /cm_outputs
    volumes:
      - geodb:/geodb
      - cm_outputs:/cm_outputs
    env_file:
      .env

  redis:
    image: redis:6-alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data

  flower:
    image: mher/flower:0.9.4
    ports:
      - "127.0.0.1:5555:5555"
    volumes:
      - flower-data:/data
    env_file:
      .env

volumes:
  geodb:
  cm_outputs:
  caddy-data:
  caddy-config:
  redis-data:
  flower-data:
